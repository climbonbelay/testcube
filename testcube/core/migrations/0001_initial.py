# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-06-30 10:14
from __future__ import unicode_literals

import datetime

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100)),
                ('value', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('summary', models.CharField(max_length=500)),
                ('created_by', models.CharField(blank=True, max_length=50)),
                ('assigned_to', models.CharField(blank=True, max_length=50)),
                ('created_on', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=50)),
                ('link', models.CharField(blank=True, max_length=300)),
                ('is_synced', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('version', models.CharField(default='latest', max_length=20)),
                ('owner', models.CharField(blank=True, max_length=50)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ResultAnalysis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('by', models.CharField(max_length=50)),
                ('reason', models.IntegerField(
                    choices=[(0, 'Product defect'), (1, 'Testcase defect'), (2, 'Environment issue'), (3, 'Other')],
                    default=0)),
                ('description', models.TextField(blank=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('issue', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT,
                                            related_name='analysis', to='core.Issue')),
            ],
            options={
                'ordering': ['-updated_on'],
            },
        ),
        migrations.CreateModel(
            name='ResultError',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exception_type', models.CharField(max_length=100)),
                ('message', models.TextField(blank=True, null=True)),
                ('stacktrace', models.TextField(blank=True, null=True)),
                ('stdout', models.TextField(blank=True, null=True)),
                ('stderr', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('owner', models.CharField(blank=True, max_length=50)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('full_name', models.CharField(default='', max_length=400)),
                ('keyword', models.CharField(blank=True, max_length=100, null=True)),
                ('priority',
                 models.IntegerField(choices=[(0, 'Urgent'), (1, 'High'), (2, 'Medium'), (3, 'Low')], default=2)),
                ('description', models.TextField(blank=True)),
                ('owner', models.CharField(blank=True, max_length=50)),
                ('created_by', models.CharField(max_length=50)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cases',
                                              to='core.Product')),
                ('team',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cases', to='core.Team')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='TestClient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('ip', models.CharField(max_length=50)),
                ('platform', models.CharField(max_length=100)),
                ('owner', models.CharField(max_length=50)),
                ('status',
                 models.IntegerField(choices=[(0, 'Ready'), (1, 'Not Ready'), (2, 'Undetermined')], default=0)),
                ('detail', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='TestResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('outcome', models.IntegerField(
                    choices=[(0, 'Passed'), (1, 'Failed'), (2, 'Skipped'), (3, 'Error'), (4, 'Manual Passed')])),
                ('stdout', models.TextField(blank=True, default=None, null=True)),
                ('duration', models.DurationField(default=datetime.timedelta(0))),
                ('assigned_to', models.CharField(max_length=50)),
                ('is_rerun', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('analysis', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                               related_name='results', to='core.ResultAnalysis')),
                ('error', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                            related_name='results', to='core.ResultError')),
                ('test_client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='results',
                                                  to='core.TestClient')),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='TestRun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('owner', models.CharField(max_length=50)),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('start_by', models.CharField(max_length=50)),
                ('state', models.IntegerField(
                    choices=[(-1, 'Not Ready'), (0, 'Starting'), (1, 'Running'), (2, 'Aborted'), (3, 'Completed')],
                    default=-1)),
                ('status', models.IntegerField(
                    choices=[(-1, 'Pending'), (0, 'Passed'), (1, 'Failed'), (2, 'Analyzed'), (3, 'Abandoned')],
                    default=-1)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='runs',
                                              to='core.Product')),
                ('team',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='runs', to='core.Team')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='testresult',
            name='test_run',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results',
                                    to='core.TestRun'),
        ),
        migrations.AddField(
            model_name='testresult',
            name='testcase',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results',
                                    to='core.TestCase'),
        ),
        migrations.AddField(
            model_name='product',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products',
                                    to='core.Team'),
        ),
    ]
